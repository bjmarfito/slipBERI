% This script makes the default structures for the slipBERI code for the
% 2016 Central Tottori, Japan, earthquake, as seen in:
%
%  Amey, R. M. J., Hooper, A., & Morishita, Y. ( 2019). Going to any 
% lengths: Solving for fault size and fractal slip for the 2016, Mw 6.2 
% Central Tottori earthquake, Japan, using a transdimensional inversion 
% scheme. Journal of Geophysical Research: Solid Earth, 124. 
% https://doi.org/10.1029/2018JB016434 
%
% For details on what each parameter is, please see the help for slipBERI
%
% R.M.J.Amey 2018

clear all


fault = struct('fault_descriptor_file', 'kurayoshi_fault_plane.txt',...
                'fault_coordinate_unit', 'UTM');
            
data = struct('InSAR_datafile', {{'downsampled_InSAR_kurayoshi.txt', '20150117_20161022_disp.txt', '20141207_20161023_disp.txt', '20150523_20161024_disp.txt', '20160803_20161026_disp.txt'}}, ...
              'InSAR_coordinate_unit', 'long/lat',...
              'varcovar_details', {{'kurayoshi_covar.txt', '20150117_20161022_covar.txt', '20141207_20161023_covar.txt', '20150523_20161024_covar.txt', '20160803_20161026_covar.txt'}},...
              'quadtree_n_points', {{'nesteddownsample_npoints.txt', '20150117_20161022_nestedownsamplenpoints.txt', '20141207_20161023_nestedownsamplenpoints.txt', '20150523_20161024_nestedownsamplenpoints.txt', '20160803_20161026_nestedownsamplenpoints.txt'}},...
              'GPS_datafile_2d', 'none',...
              'GPS_datafile_3d', 'japankurayoshi_gnss.7cols',...
              'GPS_coordinate_unit', 'long/lat',...
              'atolls_datafile', 'none',...
              'atolls_coordinate_unit', [],...
              'weight_InSAR', 1,...
              'weight_GPS', 1,...
              'weight_atolls', 1,...
              'UTMzone', 53,...
              'origin', [35.368, 133.815],...
              'EQ_epicenter', [35.368, 133.815, 5.7], ...    
              'seismic_moment', 2.818e+18, ...    
              'moment_std', 2.1310e+17);
          
testing = struct('testing_mode', 'no',...
                 'making_model', 'making_model_surfaceslip.mat',...
                 'var', 0.01,...
                 'add_noise', 0)  ;        
          
invert = struct('quickcheck', 'yes',...
                'inversion_type', 'bayesian', ...    
                'iterations', 500000, ... 
                'smoothing', 'VK',...
                'smooth_across_fault_strands', 'yes',...              
                'slip_initial', 0.7, ... 
                'step_size', 0.005, ... 
                'variable_rake', 'yes',... 
                'solve_for_InSAR_offset', 'yes',...
                'solve_for_InSAR_ramp', 'no',...
                'regularise_moment', 'no', ... 
                'alpha2_initial', 0.7,...  
                'alpha2_step_size', 0.01,... 
                'probability_target_initial', 0.0001, ...
                'solve_for_beta', 'no',...
                'beta_initial', 1,...
                'beta_step_size', 0,...
                'simulated_annealing_start', 'no',...
                'solve_for_fault_size', 'no', ...
                'add_correlation_matrix_stabiliser', 'no' ,...
                'load_old_MCMC_chain', 'no');      
            
priors = struct('slip_prior', 'boxcar', ...
                'min_slip', 0, ...
                'max_slip', 10, ...
                'predominant_faulting_style', {{'ss'}},...
                'min_rake', -40,...
                'max_rake', 20,...
                'alpha2_prior', 'logarithmic',...
                'min_alpha2', 0.00001,...
                'max_alpha2', 20,...
                'alpha2flag', [],...
                'min_offset', [-1;-1;-1;-1;-1],...
                'max_offset', [1;1;1;1;1],...
                'min_beta', [],...
                'max_beta', [],...
                'min_circharm_coeffs', 0,...
                'max_circharm_coeffs', 15000,...
                'min_circharm_phi', 0,...
                'max_circharm_phi', 2*pi,...
                'min_circharm_center', [0; 0],...
                'max_circharm_center', [20559; 15000]);
        
% fifth structure: 'elastic_params'
elastic_params = struct('lambda', 3.23e10,...
                        'mu_okada', 3.23e10);

% sixth structure: 'disp', within which 'figures' is a nested structure of which figures you'd like
display = struct('plot_resolution_matrix', 'no',...     
                 'plotmean', 'no',...                        % other option: 'yes'
                 'plotmode', 'no',...                        % other option: 'yes'
                 'plotmedian', 'no',...                      % other option: 'no'              
                 'plotmaxlikely', 'yes',...                  % other option: 'yes'  % IN FUTURE VERSIONS THIS WILL BE DELETED, coz I've replaced it with MAP
                 'plotallslips', 'yes',...                   % other option: 'no'
                 'plotprob', 'yes',...                       % other option: 'no'
                 'plothists', 'plothistsall',...              % other option: 'plothistsample' (i.e. choose some at random to plot)
                 'plotsurfacedisp', 'yes',...                % other option: 'no'
                 'plotmarginalPDFs', 'yes',...
                 'plotMAP', 'yes',...
                 'plot3d', 'yes') ;                % other option: 'no'
             
             
                    
 housekeeping = struct('save_name', 'kurayoshislip');


% display all the structures so people actually look and check
disp('elastic_params'), disp(elastic_params)
disp('housekeeping ='); disp(housekeeping)
disp('testing ='), disp(testing)
disp('display ='), disp(display)
disp('fault ='); disp(fault)
disp('data ='); disp(data)
disp('invert ='); disp(invert)


